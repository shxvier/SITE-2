// === –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–†–ó–ò–ù–û–ô ===
let cart = [];

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ localStorage –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
function loadCart() {
  try {
    const saved = localStorage.getItem('cart');
    cart = saved ? JSON.parse(saved) : [];
  } catch (e) {
    cart = [];
  }
  updateCartUI();
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
function saveCart() {
  try {
    localStorage.setItem('cart', JSON.stringify(cart));
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã:', e);
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –∫–æ—Ä–∑–∏–Ω—ã
function updateCartUI() {
  const cartCount = document.getElementById('cartCount');
  const cartItems = document.getElementById('cartItems');
  const cartTotal = document.getElementById('cartTotal');
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫ –≤ –∏–∫–æ–Ω–∫–µ –∫–æ—Ä–∑–∏–Ω—ã
  if (cartCount) {
    const totalItems = cart.reduce(function(sum, item) {
      return sum + item.qty;
    }, 0);
    cartCount.textContent = totalItems;
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã
  if (cartItems) {
    if (cart.length === 0) {
      cartItems.innerHTML = '<div class="cart-empty"><div style="font-size:64px;opacity:.5;margin-bottom:1rem">üõí</div><p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p><small class="text-muted">–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞</small></div>';
    } else {
      let html = '';
      for (let i = 0; i < cart.length; i++) {
        const item = cart[i];
        html += '<div class="cart-item">';
        html += '<div class="cart-item-icon">' + item.image + '</div>';
        html += '<div class="cart-item-info">';
        html += '<div class="cart-item-name">' + item.name + '</div>';
        html += '<div class="cart-item-price">' + formatPrice(item.price) + ' ‚ÇΩ</div>';
        html += '</div>';
        html += '<div class="cart-item-controls">';
        html += '<button class="qty-btn" onclick="changeQty(' + item.id + ', -1)">‚àí</button>';
        html += '<span class="qty-display">' + item.qty + '</span>';
        html += '<button class="qty-btn" onclick="changeQty(' + item.id + ', 1)">+</button>';
        html += '</div>';
        html += '<button class="cart-item-remove" onclick="removeFromCart(' + item.id + ')">‚úï</button>';
        html += '</div>';
      }
      cartItems.innerHTML = html;
    }
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É
  if (cartTotal) {
    let total = 0;
    for (let i = 0; i < cart.length; i++) {
      total += cart[i].price * cart[i].qty;
    }
    cartTotal.textContent = formatPrice(total) + ' ‚ÇΩ';
  }
  
  saveCart();
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(id, name, price, image) {
  let found = false;
  for (let i = 0; i < cart.length; i++) {
    if (cart[i].id === id) {
      cart[i].qty++;
      found = true;
      break;
    }
  }
  
  if (!found) {
    cart.push({
      id: id,
      name: name,
      price: price,
      image: image,
      qty: 1
    });
  }
  
  updateCartUI();
  showNotification('‚úì ' + name + ' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É');
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
function removeFromCart(id) {
  cart = cart.filter(function(item) {
    return item.id !== id;
  });
  updateCartUI();
  showNotification('–¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã');
}

// –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
function changeQty(id, delta) {
  for (let i = 0; i < cart.length; i++) {
    if (cart[i].id === id) {
      cart[i].qty += delta;
      if (cart[i].qty <= 0) {
        removeFromCart(id);
        return;
      }
      break;
    }
  }
  updateCartUI();
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–æ—Ä–∑–∏–Ω—ã
function toggleCart() {
  const sidebar = document.getElementById('cartSidebar');
  const overlay = document.getElementById('cartOverlay');
  
  if (sidebar && overlay) {
    const isOpen = sidebar.classList.contains('open');
    
    if (isOpen) {
      sidebar.classList.remove('open');
      overlay.classList.remove('show');
      document.body.style.overflow = '';
    } else {
      sidebar.classList.add('open');
      overlay.classList.add('show');
      document.body.style.overflow = 'hidden';
    }
  }
}

// –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
function checkout() {
  if (cart.length === 0) {
    showNotification('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞', 'error');
    return;
  }
  
  let total = 0;
  let itemsList = '';
  
  for (let i = 0; i < cart.length; i++) {
    total += cart[i].price * cart[i].qty;
    if (i > 0) itemsList += ', ';
    itemsList += cart[i].name + ' x' + cart[i].qty;
  }
  
  const message = '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ —Å—É–º–º—É ' + formatPrice(total) + ' ‚ÇΩ?\n\n–¢–æ–≤–∞—Ä—ã: ' + itemsList;
  
  if (confirm(message)) {
    showNotification('‚úì –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.', 'success');
    cart = [];
    updateCartUI();
    toggleCart();
  }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
function formatPrice(num) {
  return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ');
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type) {
  if (!type) type = 'success';
  
  const notif = document.createElement('div');
  notif.className = 'notification notification-' + type;
  notif.textContent = message;
  document.body.appendChild(notif);
  
  setTimeout(function() {
    notif.classList.add('show');
  }, 10);
  
  setTimeout(function() {
    notif.classList.remove('show');
    setTimeout(function() {
      if (notif.parentNode) {
        notif.parentNode.removeChild(notif);
      }
    }, 300);
  }, 3000);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', loadCart);
} else {
  loadCart();
}
